{"version":3,"file":"static/js/124.3ac56f42.chunk.js","mappings":"+SAEMA,EAAO,gCACPC,EAAM,4CACNC,EAAO,kBAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAMJ,EAAO,mBAAqBC,GADpD,cACCI,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,wFACkBL,EAAAA,EAAAA,GAAMJ,EAAO,SAAWS,EAAKR,EAAMC,GADrD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,wFACkBL,EAAAA,EAAAA,GAAMJ,EAAO,SAAWS,EAAK,WAAaR,EAAMC,GADlE,cACCG,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,wFACkBL,EAAAA,EAAAA,GAAMJ,EAAO,SAAWS,EAAK,WAAaR,EAAMC,GADlE,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,wFACkBV,EAAAA,EAAAA,GACrBJ,EACE,eACAC,EACAC,EACA,WACAY,EACA,+BARC,cACCT,EADD,yBAWEA,EAASC,KAAKC,SAXhB,kE,6GCzBMQ,E,OAAaC,GAAAA,IAAH,wJ,2BC6CvB,MArCA,WACE,IAAQP,GAAOQ,EAAAA,EAAAA,MAAPR,GACR,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,WAAAX,EAAAA,EAAAA,IAAQD,UAAR,SAAaa,KAAKF,EACnB,GAAE,CAACX,IAGF,CAAEU,MAAAA,KACA,UAACJ,EAAD,YACE,mCACA,wBACqB,KAAb,OAALI,QAAK,IAALA,OAAA,EAAAA,EAAOI,SACN,mEADD,OAGCJ,QAHD,IAGCA,OAHD,EAGCA,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACT,gBAAIC,UAAU,aAAd,WACE,uCAAeF,GAAa,WAC5B,kCAAUD,GAAQ,WAClB,SAACI,EAAA,EAAD,CAAQC,MAAO,IAAKC,IAAKP,EAAcQ,IAAKP,KAE5C,oBAL8BE,EADvB,QActB,C,2HC7BD,MALA,YAAsC,IAApBI,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,IAAKF,EAAS,EAATA,MAC1B,OACE,gBAAKA,MAAOA,EAAOG,IAAKF,EALR,kCAK4BA,EAAMG,EAAUF,IAAKA,GAEpE,C","sources":["Util/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Poster.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=66413c0c73bd8d6f9d602d8ba291e1c5';\nconst LANG = '&language=en-US';\n\nexport async function getTrends() {\n  const response = await axios(BASE + 'trending/all/day' + KEY);\n  return response.data.results;\n}\n\nexport async function getDetails(id) {\n  const response = await axios(BASE + 'movie/' + id + KEY + LANG);\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios(BASE + 'movie/' + id + '/credits' + KEY + LANG);\n  return response.data.cast;\n}\n\nexport async function getReview(id) {\n  const response = await axios(BASE + 'movie/' + id + '/reviews' + KEY + LANG);\n  return response.data.results;\n}\n\nexport async function getMovies(q) {\n  const response = await axios(\n    BASE +\n      'search/movie' +\n      KEY +\n      LANG +\n      '/&query=' +\n      q +\n      '&page=1&include_adult=false'\n  );\n\n  return response.data.results;\n}","import styled from 'styled-components';\nexport const CastStyled = styled.div`\n  h2 {\n  }\n\n  ul {\n    display: block;\n    list-style: none;\n    padding: 0;\n  }\n  li {\n    margin-bottom: 20px;\n  }\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { CastStyled } from './Cast.styled';\n\nimport { getCast } from '../../Util/api';\nimport Poster from '../Poster';\n\nfunction Cast() {\n  const { id } = useParams();\n  const [casts, setCasts] = useState(null);\n  useEffect(() => {\n    getCast(id)?.then(setCasts);\n  }, [id]);\n\n  return (\n    { casts } && (\n      <CastStyled>\n        <h2>Cast:</h2>\n        <ul>\n          {casts?.length === 0 ? (\n            <p>We don't have any casts for this movies</p>\n          ) : (\n            casts?.map(({ profile_path, name, character, cast_id }) => (\n              <li className=\"thumb-cast\" key={cast_id}>\n                <p>Character: {character || 'none'}</p>\n                <p>Name: {name || 'none'}</p>\n                <Poster width={100} url={profile_path} alt={name}></Poster>\n\n                <br />\n              </li>\n            ))\n          )}\n        </ul>\n      </CastStyled>\n    )\n  );\n}\n\nCast.propTypes = {\n  width: PropTypes.number,\n  url: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default Cast;","import portrait from '../portrait.jpeg';\nconst BASE_POSTER = 'https://image.tmdb.org/t/p/w500';\n// const BASE_POSTER2 = 'https://image.tmdb.org/t/p/w200';\n\nfunction Poster({ url, alt, width }) {\n  return (\n    <img width={width} src={url ? BASE_POSTER + url : portrait} alt={alt} />\n  );\n}\nexport default Poster;"],"names":["BASE","KEY","LANG","getTrends","axios","response","data","results","getDetails","id","getCast","cast","getReview","getMovies","q","CastStyled","styled","useParams","useState","casts","setCasts","useEffect","then","length","map","profile_path","name","character","cast_id","className","Poster","width","url","alt","src","portrait"],"sourceRoot":""}